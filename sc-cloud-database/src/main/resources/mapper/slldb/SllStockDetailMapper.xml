<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cshao.common.dao.slldb.SllStockDetailMapper">
  <resultMap id="BaseResultMap" type="cn.cshao.common.model.slldb.SllStockDetail">
    <id column="std_id" jdbcType="BIGINT" property="stdId" />
    <result column="std_no" jdbcType="VARCHAR" property="stdNo" />
    <result column="ph_id" jdbcType="BIGINT" property="phId" />
    <result column="md_no" jdbcType="VARCHAR" property="mdNo" />
    <result column="cfm_num" jdbcType="INTEGER" property="cfmNum" />
    <result column="rest_num" jdbcType="INTEGER" property="restNum" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    std_id, std_no, ph_id, md_no, cfm_num, rest_num, `status`, create_time, create_user, 
    update_time, update_user, batch_no
  </sql>
  <select id="selectByExample" parameterType="cn.cshao.common.model.slldb.SllStockDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sll_stock_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sll_stock_detail
    where std_id = #{stdId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sll_stock_detail
    where std_id = #{stdId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.cshao.common.model.slldb.SllStockDetailExample">
    delete from sll_stock_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="std_id" keyProperty="stdId" parameterType="cn.cshao.common.model.slldb.SllStockDetail" useGeneratedKeys="true">
    insert into sll_stock_detail (std_no, ph_id, md_no, 
      cfm_num, rest_num, `status`, 
      create_time, create_user, update_time, 
      update_user, batch_no)
    values (#{stdNo,jdbcType=VARCHAR}, #{phId,jdbcType=BIGINT}, #{mdNo,jdbcType=VARCHAR}, 
      #{cfmNum,jdbcType=INTEGER}, #{restNum,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=BIGINT}, #{batchNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="std_id" keyProperty="stdId" parameterType="cn.cshao.common.model.slldb.SllStockDetail" useGeneratedKeys="true">
    insert into sll_stock_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stdNo != null">
        std_no,
      </if>
      <if test="phId != null">
        ph_id,
      </if>
      <if test="mdNo != null">
        md_no,
      </if>
      <if test="cfmNum != null">
        cfm_num,
      </if>
      <if test="restNum != null">
        rest_num,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="batchNo != null">
        batch_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stdNo != null">
        #{stdNo,jdbcType=VARCHAR},
      </if>
      <if test="phId != null">
        #{phId,jdbcType=BIGINT},
      </if>
      <if test="mdNo != null">
        #{mdNo,jdbcType=VARCHAR},
      </if>
      <if test="cfmNum != null">
        #{cfmNum,jdbcType=INTEGER},
      </if>
      <if test="restNum != null">
        #{restNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="batchNo != null">
        #{batchNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.cshao.common.model.slldb.SllStockDetailExample" resultType="java.lang.Long">
    select count(*) from sll_stock_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sll_stock_detail
    <set>
      <if test="record.stdId != null">
        std_id = #{record.stdId,jdbcType=BIGINT},
      </if>
      <if test="record.stdNo != null">
        std_no = #{record.stdNo,jdbcType=VARCHAR},
      </if>
      <if test="record.phId != null">
        ph_id = #{record.phId,jdbcType=BIGINT},
      </if>
      <if test="record.mdNo != null">
        md_no = #{record.mdNo,jdbcType=VARCHAR},
      </if>
      <if test="record.cfmNum != null">
        cfm_num = #{record.cfmNum,jdbcType=INTEGER},
      </if>
      <if test="record.restNum != null">
        rest_num = #{record.restNum,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.batchNo != null">
        batch_no = #{record.batchNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sll_stock_detail
    set std_id = #{record.stdId,jdbcType=BIGINT},
      std_no = #{record.stdNo,jdbcType=VARCHAR},
      ph_id = #{record.phId,jdbcType=BIGINT},
      md_no = #{record.mdNo,jdbcType=VARCHAR},
      cfm_num = #{record.cfmNum,jdbcType=INTEGER},
      rest_num = #{record.restNum,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      batch_no = #{record.batchNo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cshao.common.model.slldb.SllStockDetail">
    update sll_stock_detail
    <set>
      <if test="stdNo != null">
        std_no = #{stdNo,jdbcType=VARCHAR},
      </if>
      <if test="phId != null">
        ph_id = #{phId,jdbcType=BIGINT},
      </if>
      <if test="mdNo != null">
        md_no = #{mdNo,jdbcType=VARCHAR},
      </if>
      <if test="cfmNum != null">
        cfm_num = #{cfmNum,jdbcType=INTEGER},
      </if>
      <if test="restNum != null">
        rest_num = #{restNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="batchNo != null">
        batch_no = #{batchNo,jdbcType=VARCHAR},
      </if>
    </set>
    where std_id = #{stdId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cshao.common.model.slldb.SllStockDetail">
    update sll_stock_detail
    set std_no = #{stdNo,jdbcType=VARCHAR},
      ph_id = #{phId,jdbcType=BIGINT},
      md_no = #{mdNo,jdbcType=VARCHAR},
      cfm_num = #{cfmNum,jdbcType=INTEGER},
      rest_num = #{restNum,jdbcType=INTEGER},
      `status` = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      batch_no = #{batchNo,jdbcType=VARCHAR}
    where std_id = #{stdId,jdbcType=BIGINT}
  </update>
</mapper>