<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cshao.common.dao.hsdb.HsHospitalMapper">
  <resultMap id="BaseResultMap" type="cn.cshao.common.model.hsdb.HsHospital">
    <id column="hosp_id" jdbcType="INTEGER" property="hospId" />
    <result column="hosp_no" jdbcType="VARCHAR" property="hospNo" />
    <result column="hosp_nm" jdbcType="VARCHAR" property="hospNm" />
    <result column="alias" jdbcType="VARCHAR" property="alias" />
    <result column="dist_id" jdbcType="INTEGER" property="distId" />
    <result column="addr" jdbcType="VARCHAR" property="addr" />
    <result column="clazz" jdbcType="TINYINT" property="clazz" />
    <result column="nature" jdbcType="TINYINT" property="nature" />
    <result column="grade" jdbcType="TINYINT" property="grade" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hosp_id, hosp_no, hosp_nm, `alias`, dist_id, addr, clazz, nature, grade, `status`, 
    create_time, create_user, update_time, update_user
  </sql>
  <select id="selectByExample" parameterType="cn.cshao.common.model.hsdb.HsHospitalExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from hs_hospital
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hs_hospital
    where hosp_id = #{hospId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hs_hospital
    where hosp_id = #{hospId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.cshao.common.model.hsdb.HsHospitalExample">
    delete from hs_hospital
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="hosp_id" keyProperty="hospId" parameterType="cn.cshao.common.model.hsdb.HsHospital" useGeneratedKeys="true">
    insert into hs_hospital (hosp_no, hosp_nm, `alias`, 
      dist_id, addr, clazz, 
      nature, grade, `status`, 
      create_time, create_user, update_time, 
      update_user)
    values (#{hospNo,jdbcType=VARCHAR}, #{hospNm,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, 
      #{distId,jdbcType=INTEGER}, #{addr,jdbcType=VARCHAR}, #{clazz,jdbcType=TINYINT}, 
      #{nature,jdbcType=TINYINT}, #{grade,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="hosp_id" keyProperty="hospId" parameterType="cn.cshao.common.model.hsdb.HsHospital" useGeneratedKeys="true">
    insert into hs_hospital
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hospNo != null">
        hosp_no,
      </if>
      <if test="hospNm != null">
        hosp_nm,
      </if>
      <if test="alias != null">
        `alias`,
      </if>
      <if test="distId != null">
        dist_id,
      </if>
      <if test="addr != null">
        addr,
      </if>
      <if test="clazz != null">
        clazz,
      </if>
      <if test="nature != null">
        nature,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hospNo != null">
        #{hospNo,jdbcType=VARCHAR},
      </if>
      <if test="hospNm != null">
        #{hospNm,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="distId != null">
        #{distId,jdbcType=INTEGER},
      </if>
      <if test="addr != null">
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null">
        #{clazz,jdbcType=TINYINT},
      </if>
      <if test="nature != null">
        #{nature,jdbcType=TINYINT},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.cshao.common.model.hsdb.HsHospitalExample" resultType="java.lang.Long">
    select count(*) from hs_hospital
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hs_hospital
    <set>
      <if test="record.hospId != null">
        hosp_id = #{record.hospId,jdbcType=INTEGER},
      </if>
      <if test="record.hospNo != null">
        hosp_no = #{record.hospNo,jdbcType=VARCHAR},
      </if>
      <if test="record.hospNm != null">
        hosp_nm = #{record.hospNm,jdbcType=VARCHAR},
      </if>
      <if test="record.alias != null">
        `alias` = #{record.alias,jdbcType=VARCHAR},
      </if>
      <if test="record.distId != null">
        dist_id = #{record.distId,jdbcType=INTEGER},
      </if>
      <if test="record.addr != null">
        addr = #{record.addr,jdbcType=VARCHAR},
      </if>
      <if test="record.clazz != null">
        clazz = #{record.clazz,jdbcType=TINYINT},
      </if>
      <if test="record.nature != null">
        nature = #{record.nature,jdbcType=TINYINT},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hs_hospital
    set hosp_id = #{record.hospId,jdbcType=INTEGER},
      hosp_no = #{record.hospNo,jdbcType=VARCHAR},
      hosp_nm = #{record.hospNm,jdbcType=VARCHAR},
      `alias` = #{record.alias,jdbcType=VARCHAR},
      dist_id = #{record.distId,jdbcType=INTEGER},
      addr = #{record.addr,jdbcType=VARCHAR},
      clazz = #{record.clazz,jdbcType=TINYINT},
      nature = #{record.nature,jdbcType=TINYINT},
      grade = #{record.grade,jdbcType=TINYINT},
      `status` = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cshao.common.model.hsdb.HsHospital">
    update hs_hospital
    <set>
      <if test="hospNo != null">
        hosp_no = #{hospNo,jdbcType=VARCHAR},
      </if>
      <if test="hospNm != null">
        hosp_nm = #{hospNm,jdbcType=VARCHAR},
      </if>
      <if test="alias != null">
        `alias` = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="distId != null">
        dist_id = #{distId,jdbcType=INTEGER},
      </if>
      <if test="addr != null">
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null">
        clazz = #{clazz,jdbcType=TINYINT},
      </if>
      <if test="nature != null">
        nature = #{nature,jdbcType=TINYINT},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where hosp_id = #{hospId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cshao.common.model.hsdb.HsHospital">
    update hs_hospital
    set hosp_no = #{hospNo,jdbcType=VARCHAR},
      hosp_nm = #{hospNm,jdbcType=VARCHAR},
      `alias` = #{alias,jdbcType=VARCHAR},
      dist_id = #{distId,jdbcType=INTEGER},
      addr = #{addr,jdbcType=VARCHAR},
      clazz = #{clazz,jdbcType=TINYINT},
      nature = #{nature,jdbcType=TINYINT},
      grade = #{grade,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where hosp_id = #{hospId,jdbcType=INTEGER}
  </update>
</mapper>